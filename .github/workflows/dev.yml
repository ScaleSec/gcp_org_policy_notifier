name: Development environment checks and Terraform

on:
  push:
    branches:
    - dev
  pull_request:
    branches:
    - dev

jobs:
  build:
    runs-on: ubuntu-latest

    name: Terraform Validation
    steps:

    - uses: actions/checkout@v2

    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
        service_account_key: ${{ secrets.SA_VARS_DEV }}
        export_default_credentials: false

    - name: Get tfvars file dev
      run: gsutil cp gs://${{ secrets.GCP_TFVAR_BUCKET_DEV }}/terraform.tfvars ./terraform.tfvars
    
    - uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.12.29

    - name: Terraform fmt
      id: fmt
      run: terraform fmt
      continue-on-error: false

    - name: Terraform Init dev
      id: init
      run: terraform init --backend-config=${{ secrets.TF_STATE_BUCKET }} --backend-config="prefix=org_policy/dev"

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
      continue-on-error: false

    - name: Terraform Plan Output
      uses: actions/github-script@0.9.0
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style ðŸ–Œ\`${{ steps.fmt.outcome }}\`
          #### Terraform Validation ðŸ¤–${{ steps.validate.outputs.stdout }}
          #### Terraform Plan ðŸ“–\`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`${process.env.PLAN}\`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Terraform Apply
      id: apply
      if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
      run: terraform apply -auto-approve
      continue-on-error: false